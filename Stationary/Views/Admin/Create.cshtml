@model Stationary.Models.Product

<!-- Best way: use link tag for Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<style>
        @@font-face {  
            font-family: 'Inter';  
            font-style: normal;  
            font-weight: 300;  
            src: url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');  
        }  

        .product-form-container {  
            font-family: 'Inter', sans-serif;  
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);  
            min-height: 100vh;  
            padding: 40px 20px;  
        }  

        /* Rest of the CSS remains unchanged */  
    
    .product-form-container {
        font-family: 'Inter', sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 40px 20px;
    }

    .form-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        padding: 40px;
        max-width: 600px;
        margin: 0 auto;
        animation: slideUp 0.6s ease-out;
    }

    @@keyframes slideUp {
        from

    {
        opacity: 0;
        transform: translateY(30px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .form-title {
        text-align: center;
        color: #2d3748;
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 10px;
    }

    .form-subtitle {
        text-align: center;
        color: #718096;
        margin-bottom: 40px;
        font-size: 1.1rem;
    }

    .form-group {
        position: relative;
        margin-bottom: 30px;
    }

    .form-control {
        width: 100%;
        padding: 15px 20px;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 500;
        background: #ffffff;
        transition: all 0.3s ease;
        box-sizing: border-box;
    }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

    .form-label {
        position: absolute;
        left: 20px;
        top: 15px;
        color: #a0aec0;
        font-weight: 500;
        transition: all 0.3s ease;
        pointer-events: none;
        background: white;
        padding: 0 5px;
    }

    .form-control:focus + .form-label,
    .form-control:not(:placeholder-shown) + .form-label {
        top: -10px;
        left: 15px;
        font-size: 12px;
        color: #667eea;
        font-weight: 600;
    }

    .upload-area {
        border: 2px dashed #cbd5e0;
        border-radius: 12px;
        padding: 40px 20px;
        text-align: center;
        background: #f7fafc;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
    }

        .upload-area:hover {
            border-color: #667eea;
            background: #edf2f7;
            transform: translateY(-2px);
        }

    .upload-icon {
        width: 48px;
        height: 48px;
        margin: 0 auto 20px;
        opacity: 0.5;
    }

    .upload-text {
        color: #4a5568;
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 8px;
    }

    .upload-subtext {
        color: #718096;
        font-size: 14px;
    }

    .file-input {
        position: absolute;
        opacity: 0;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }

    .preview-container {
        display: none;
        text-align: center;
    }

    .preview-image {
        max-width: 150px;
        max-height: 150px;
        border-radius: 8px;
        margin-bottom: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .remove-btn {
        background: #e53e3e;
        color: white;
        border: none;
        padding: 5px 15px;
        border-radius: 6px;
        font-size: 12px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .remove-btn:hover {
            background: #c53030;
        }

    .submit-btn {
        width: 100%;
        background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
        color: white;
        border: none;
        padding: 18px 30px;
        border-radius: 12px;
        font-size: 18px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(72, 187, 120, 0.3);
        }

        .submit-btn:active {
            transform: translateY(0);
        }

    .success-message {
        background: #f0fff4;
        border: 1px solid #9ae6b4;
        color: #276749;
        padding: 15px 20px;
        border-radius: 12px;
        margin-top: 20px;
        display: none;
        align-items: center;
        gap: 10px;
    }

    .loading-spinner {
        width: 20px;
        height: 20px;
        border: 2px solid #ffffff;
        border-top: 2px solid transparent;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0%

    {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }

    }
</style>

<div class="product-form-container">
    <div class="form-card">
        <h2 class="form-title">Add New Product</h2>
        <p class="form-subtitle">Create a new product for your inventory</p>

        @using (Html.BeginForm("Create", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "productForm" }))
        {
            <div class="form-group">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = " ", required = "required" })
                <label class="form-label">Product Name</label>
            </div>

            <div class="form-group">
                @Html.TextBoxFor(m => m.Category, new { @class = "form-control", placeholder = " ", required = "required" })
                <label class="form-label">Category</label>
            </div>

            <div class="form-group">
                @Html.TextBoxFor(m => m.Price, new { @class = "form-control", placeholder = " ", type = "number", step = "0.01", min = "0", required = "required" })
                <label class="form-label">Price ($)</label>
            </div>

            <div class="form-group">
                <div class="upload-area" onclick="document.getElementById('imageInput').click()">
                    <input type="file" name="image" id="imageInput" class="file-input" accept="image/*" onchange="handleFileSelect(event)">

                    <div id="uploadContent">
                        <svg class="upload-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                        </svg>
                        <div class="upload-text">Upload Product Image</div>
                        <div class="upload-subtext">Click to browse or drag and drop<br>PNG, JPG, GIF up to 10MB</div>
                    </div>

                    <div id="previewContainer" class="preview-container">
                        <img id="previewImage" class="preview-image" alt="Preview">
                        <div>
                            <div id="fileName" style="margin-bottom: 10px; font-weight: 500;"></div>
                            <button type="button" class="remove-btn" onclick="clearFile()">Remove</button>
                        </div>
                    </div>
                </div>
            </div>

            <button type="submit" class="submit-btn" id="submitBtn">
                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Create Product
            </button>
        }

        <div id="successMessage" class="success-message">
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
            Product created successfully!
        </div>
    </div>
</div>

<script>
    function handleFileSelect(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                document.getElementById('previewImage').src = e.target.result;
                document.getElementById('fileName').textContent = file.name;
                document.getElementById('uploadContent').style.display = 'none';
                document.getElementById('previewContainer').style.display = 'block';
            };
            reader.readAsDataURL(file);
        }
    }

    function clearFile() {
        document.getElementById('imageInput').value = '';
        document.getElementById('uploadContent').style.display = 'block';
        document.getElementById('previewContainer').style.display = 'none';
    }

    // Enhanced form submission with loading state
    document.getElementById('productForm').addEventListener('submit', function(e) {
        const submitBtn = document.getElementById('submitBtn');
        const originalContent = submitBtn.innerHTML;

        // Show loading state
        submitBtn.innerHTML = '<div class="loading-spinner"></div> Creating Product...';
        submitBtn.disabled = true;

        // Note: In a real ASP.NET application, the form will submit normally
        // This is just for demo purposes to show the loading state
        setTimeout(function() {
            submitBtn.innerHTML = originalContent;
            submitBtn.disabled = false;
        }, 2000);
    });

    // Drag and drop functionality
    const uploadArea = document.querySelector('.upload-area');

    uploadArea.addEventListener('dragover', function(e) {
        e.preventDefault();
        this.style.borderColor = '#667eea';
        this.style.backgroundColor = '#edf2f7';
    });

    uploadArea.addEventListener('dragleave', function(e) {
        e.preventDefault();
        this.style.borderColor = '#cbd5e0';
        this.style.backgroundColor = '#f7fafc';
    });

    uploadArea.addEventListener('drop', function(e) {
        e.preventDefault();
        this.style.borderColor = '#cbd5e0';
        this.style.backgroundColor = '#f7fafc';

        const files = e.dataTransfer.files;
        if (files.length > 0) {
            document.getElementById('imageInput').files = files;
            handleFileSelect({ target: { files: files } });
        }
    });
</script>